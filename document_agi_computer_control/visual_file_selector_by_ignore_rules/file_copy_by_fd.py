import os
import shutil
import argparse

parser = argparse.ArgumentParser()
# parser.add_argument(
#     "-f", "--filelist", help="path to filelist, generated by fd", type=str, required=True
# )
parser.add_argument(
    "-b", "--basedir", help="common prefix of filepaths", type=str, required=True
)
parser.add_argument(
    "-t",
    "--targetdir",
    help="target directory to copy files into",
    type=str,
    required=True,
)
args = parser.parse_args()


# filelist = args.filelist
# filepaths = open(filelist).read().split("\n")

basedir = args.basedir  # common prefix of filepaths
command = ["bash", "-c", f"cd '{basedir}' && fd -S '+1b'"]

assert os.path.isabs(basedir)
targetdir = args.targetdir  # target directory to copy files into
assert os.path.isabs(targetdir)
import subprocess

moutput = subprocess.check_output(command, encoding='utf-8')
filepaths = moutput.split("\n")

for fp0 in filepaths:
    fp0 = fp0.strip()
    if fp0:
        if fp0.endswith("/"): continue
        fp = os.path.join(basedir, fp0)
        assert os.path.isabs(fp)
        assert os.path.exists(fp)
        assert os.path.isfile(fp)
        rel = os.path.relpath(fp, basedir)
        new_path = os.path.join(targetdir, rel)
        new_dir = os.path.dirname(new_path)
        if not os.path.exists(new_dir):
            os.makedirs(new_dir)
        print(fp,"->", new_path)
        # exit()
        # breakpoint()
        shutil.copy2(fp, new_path)
